{"ast":null,"code":"var _jsxFileName = \"/Users/lim/Desktop/Project/react_helloworld/src/components/List.js\";\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function List(_ref) {\n  let {\n    todoData,\n    setTodoData\n  } = _ref;\n  const handleClick = id => {\n    // 삭제버튼 누른 요소를 제외한 나머지 제외\n    let newTodoData = todoData.filter(data => data.id !== id);\n\n    // this.setState({todoData : newTodoData}); // 데이터 변경\n    setTodoData(newTodoData);\n  };\n  const handleCompleteChange = id => {\n    let newTodoData = todoData.map(data => {\n      if (data.id === id) {\n        data.completed = !data.completed;\n      }\n      return data;\n    });\n    // this.setState({ todoData : newTodoData });\n    setTodoData(newTodoData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"todo\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: todoData.map((data, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: data.id.toString(),\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ...provided.draggableProps,\n              ref: provided.innerRef,\n              ...provided.dragHandleProps,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex item-center justify-between w-full px-4 py-1 my-2 text-gray-600 bg-gray-100 border rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"items-center py-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    defaultChecked: false,\n                    onChange: () => handleCompleteChange(data.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 53\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: data.completed ? \"line-through\" : undefined,\n                    children: data.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"items-center py-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"\",\n                    onClick: () => handleClick(data.id),\n                    children: \"x\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 45\n              }, this)\n            }, data.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 41\n            }, this)\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_c = List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","DragDropContext","Droppable","Draggable","List","todoData","setTodoData","handleClick","id","newTodoData","filter","data","handleCompleteChange","map","completed","provided","droppableProps","innerRef","index","toString","snapshot","draggableProps","dragHandleProps","undefined","title"],"sources":["/Users/lim/Desktop/Project/react_helloworld/src/components/List.js"],"sourcesContent":["import React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nexport default function List({ todoData, setTodoData }) {\n    const handleClick = (id) => {\n        // 삭제버튼 누른 요소를 제외한 나머지 제외\n        let newTodoData = todoData.filter(data => data.id !== id)\n\n        // this.setState({todoData : newTodoData}); // 데이터 변경\n        setTodoData(newTodoData);\n    };\n\n    const handleCompleteChange = (id) => {\n        let newTodoData = todoData.map((data) => {\n            if (data.id === id) {\n                data.completed = !data.completed;\n            }\n            return data;\n        })\n        // this.setState({ todoData : newTodoData });\n        setTodoData(newTodoData);\n    }\n\n    return (\n        <div>\n            <DragDropContext>\n                <Droppable droppableId=\"todo\">\n                    {(provided) => ( \n                        <div {...provided.droppableProps} ref={provided.innerRef}>\n                            {todoData.map((data, index) => (\n                                <Draggable\n                                    key={data.id}\n                                    draggableId={data.id.toString()}\n                                    index={index}\n                                >\n                                    {(provided, snapshot) => (\n                                        <div key={data.id} {...provided.draggableProps} ref={provided.innerRef} {...provided.dragHandleProps}>\n                                            <div className='flex item-center justify-between w-full px-4 py-1 my-2 text-gray-600 bg-gray-100 border rounded'>\n                                                <div className='items-center py-2'>\n                                                    <input\n                                                        type=\"checkbox\"\n                                                        defaultChecked={false}\n                                                        onChange={() => handleCompleteChange(data.id)}\n                                                    />{\" \"}\n                                                    <span\n                                                        className={data.completed ? \"line-through\" : undefined}>\n                                                        {data.title}\n                                                    </span>\n                                                </div>\n                                                <div className='items-center py-2'>\n                                                    <button\n                                                        className=''\n                                                        onClick={() => handleClick(data.id)}>x\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )}\n                                </Draggable>\n                            ))}\n                        </div>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        </div>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAAC;AAE5E,eAAe,SAASC,IAAI,OAA4B;EAAA,IAA3B;IAAEC,QAAQ;IAAEC;EAAY,CAAC;EAClD,MAAMC,WAAW,GAAIC,EAAE,IAAK;IACxB;IACA,IAAIC,WAAW,GAAGJ,QAAQ,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC;;IAEzD;IACAF,WAAW,CAACG,WAAW,CAAC;EAC5B,CAAC;EAED,MAAMG,oBAAoB,GAAIJ,EAAE,IAAK;IACjC,IAAIC,WAAW,GAAGJ,QAAQ,CAACQ,GAAG,CAAEF,IAAI,IAAK;MACrC,IAAIA,IAAI,CAACH,EAAE,KAAKA,EAAE,EAAE;QAChBG,IAAI,CAACG,SAAS,GAAG,CAACH,IAAI,CAACG,SAAS;MACpC;MACA,OAAOH,IAAI;IACf,CAAC,CAAC;IACF;IACAL,WAAW,CAACG,WAAW,CAAC;EAC5B,CAAC;EAED,oBACI;IAAA,uBACI,QAAC,eAAe;MAAA,uBACZ,QAAC,SAAS;QAAC,WAAW,EAAC,MAAM;QAAA,UACvBM,QAAQ,iBACN;UAAA,GAASA,QAAQ,CAACC,cAAc;UAAE,GAAG,EAAED,QAAQ,CAACE,QAAS;UAAA,UACpDZ,QAAQ,CAACQ,GAAG,CAAC,CAACF,IAAI,EAAEO,KAAK,kBACtB,QAAC,SAAS;YAEN,WAAW,EAAEP,IAAI,CAACH,EAAE,CAACW,QAAQ,EAAG;YAChC,KAAK,EAAED,KAAM;YAAA,UAEZ,CAACH,QAAQ,EAAEK,QAAQ,kBAChB;cAAA,GAAuBL,QAAQ,CAACM,cAAc;cAAE,GAAG,EAAEN,QAAQ,CAACE,QAAS;cAAA,GAAKF,QAAQ,CAACO,eAAe;cAAA,uBAChG;gBAAK,SAAS,EAAC,iGAAiG;gBAAA,wBAC5G;kBAAK,SAAS,EAAC,mBAAmB;kBAAA,wBAC9B;oBACI,IAAI,EAAC,UAAU;oBACf,cAAc,EAAE,KAAM;oBACtB,QAAQ,EAAE,MAAMV,oBAAoB,CAACD,IAAI,CAACH,EAAE;kBAAE;oBAAA;oBAAA;oBAAA;kBAAA,QAChD,EAAC,GAAG,eACN;oBACI,SAAS,EAAEG,IAAI,CAACG,SAAS,GAAG,cAAc,GAAGS,SAAU;oBAAA,UACtDZ,IAAI,CAACa;kBAAK;oBAAA;oBAAA;oBAAA;kBAAA,QACR;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QACL,eACN;kBAAK,SAAS,EAAC,mBAAmB;kBAAA,uBAC9B;oBACI,SAAS,EAAC,EAAE;oBACZ,OAAO,EAAE,MAAMjB,WAAW,CAACI,IAAI,CAACH,EAAE,CAAE;oBAAA,UAAC;kBACzC;oBAAA;oBAAA;oBAAA;kBAAA;gBAAS;kBAAA;kBAAA;kBAAA;gBAAA,QACP;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YACJ,GAnBAG,IAAI,CAACH,EAAE;cAAA;cAAA;cAAA;YAAA;UAqBpB,GA1BIG,IAAI,CAACH,EAAE;YAAA;YAAA;YAAA;UAAA,QA4BnB;QAAC;UAAA;UAAA;UAAA;QAAA;MAET;QAAA;QAAA;QAAA;MAAA;IACO;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QAChB;AAEd;AAAC,KA/DuBJ,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}