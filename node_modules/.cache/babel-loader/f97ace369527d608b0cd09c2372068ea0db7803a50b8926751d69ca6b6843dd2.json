{"ast":null,"code":"var _jsxFileName = \"/Users/lim/Desktop/Project/react-todo-app/src/App.js\",\n  _s = $RefreshSig$();\n// import React, {Component} from \"react\"; // \"react\"라이브러리에서 React와 Component 클래스를 가져온다.\nimport React, { useState } from 'react';\nimport \"./App.css\";\nimport List from './components/List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // state = {\n  //   todoData : [],\n  //   value : \"\"\n  // };\n  const [todoData, setTodoData] = useState([{\n    id: \"1\",\n    title: \"공부하기\",\n    completed: true\n  }, {\n    id: \"2\",\n    title: \"청소하기\",\n    completed: false\n  }]); // todoData state 정의\n  const [value, setValue] = useState(\"\"); // value state 정의\n\n  const handleChange = e => {\n    // this.setState({ value : e.target.value });\n    setValue(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault(); // 원래 submit은 페이지가 리로드된다. 이 것을 막아준다.\n\n    // 새로운 할 일 데이터\n    let newTodo = {\n      id: Date.now(),\n      // title: this.state.value,\n      title: value,\n      completed: false\n    };\n\n    // todoData에 새로운 할 일 추가하기\n    // this.setState({ todoData: [...todoData, newTodo] });\n    setTodoData(prev => [...prev, newTodo]); // setter에서 이전 state를 가져오기 위해서는 인수에 함수를 이용해서 가져올 수 있다.\n    // input에 있던 value 삭제\n    // this.setState({ value : \"\"} );\n    setValue(\"\");\n  };\n\n  // functional component는 render()가 필요없음\n  // 함수를 정의할 때 const를 붙여주고 사용하는 부분에서 this. 을 더이상 붙일 필요 없음\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoBlock\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD560 \\uC77C \\uBAA9\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        todoData: todoData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          display: 'flex'\n        },\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"value\",\n          style: {\n            flex: '10',\n            padding: '5px'\n          },\n          placeholder: \"\\uD574\\uC57C\\uD560 \\uC77C \\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n          value: value,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"\\uC785\\uB825\",\n          className: \"btn\",\n          style: {\n            flex: '1'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rdK3Jnn01PRLTFOxeTvyQfBbIKI=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","List","App","todoData","setTodoData","id","title","completed","value","setValue","handleChange","e","target","handleSubmit","preventDefault","newTodo","Date","now","prev","display","flex","padding"],"sources":["/Users/lim/Desktop/Project/react-todo-app/src/App.js"],"sourcesContent":["// import React, {Component} from \"react\"; // \"react\"라이브러리에서 React와 Component 클래스를 가져온다.\nimport React, { useState } from 'react';\nimport \"./App.css\";\nimport List from './components/List';\n\nexport default function App() {\n  // state = {\n  //   todoData : [],\n  //   value : \"\"\n  // };\n  const [todoData, setTodoData] = useState([\n    {\n      id: \"1\",\n      title: \"공부하기\",\n      completed: true\n    },\n    {\n      id: \"2\",\n      title: \"청소하기\",\n      completed: false\n    }\n  ]); // todoData state 정의\n  const [value, setValue] = useState(\"\"); // value state 정의\n\n  const handleChange = (e) => {\n    // this.setState({ value : e.target.value });\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); // 원래 submit은 페이지가 리로드된다. 이 것을 막아준다.\n\n    // 새로운 할 일 데이터\n    let newTodo = {\n      id: Date.now(),\n      // title: this.state.value,\n      title: value,\n      completed: false\n    };\n\n    // todoData에 새로운 할 일 추가하기\n    // this.setState({ todoData: [...todoData, newTodo] });\n    setTodoData(prev => [...prev, newTodo]); // setter에서 이전 state를 가져오기 위해서는 인수에 함수를 이용해서 가져올 수 있다.\n    // input에 있던 value 삭제\n    // this.setState({ value : \"\"} );\n    setValue(\"\");\n  };\n\n  \n\n  // functional component는 render()가 필요없음\n  // 함수를 정의할 때 const를 붙여주고 사용하는 부분에서 this. 을 더이상 붙일 필요 없음\n  return (\n    <div className=\"container\">\n      <div className=\"todoBlock\">\n        <div class=\"title\">\n          <h1>할 일 목록</h1>\n        </div>\n\n        <List todoData={todoData} />\n\n        <form style={{ display: 'flex' }} onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"value\"\n            style={{ flex: '10', padding: '5px' }}\n            placeholder=\"해야할 일 을 입력하세요.\"\n            value={value}\n            onChange={handleChange}\n          />\n\n          <input\n            type=\"submit\"\n            value=\"입력\"\n            className=\"btn\"\n            style={{ flex: '1' }}\n          />\n        </form>\n\n      </div>\n    </div>\n  );\n}"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,mBAAmB;AAAC;AAErC,eAAe,SAASC,GAAG,GAAG;EAAA;EAC5B;EACA;EACA;EACA;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,CACvC;IACEK,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE;EACb,CAAC,EACD;IACEF,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE;EACb,CAAC,CACF,CAAC,CAAC,CAAC;EACJ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1B;IACAF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMK,YAAY,GAAIF,CAAC,IAAK;IAC1BA,CAAC,CAACG,cAAc,EAAE,CAAC,CAAC;;IAEpB;IACA,IAAIC,OAAO,GAAG;MACZV,EAAE,EAAEW,IAAI,CAACC,GAAG,EAAE;MACd;MACAX,KAAK,EAAEE,KAAK;MACZD,SAAS,EAAE;IACb,CAAC;;IAED;IACA;IACAH,WAAW,CAACc,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEH,OAAO,CAAC,CAAC,CAAC,CAAC;IACzC;IACA;IACAN,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;;EAID;EACA;EACA,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,uBACxB;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAK,KAAK,EAAC,OAAO;QAAA,uBAChB;UAAA,UAAI;QAAM;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QACX,eAEN,QAAC,IAAI;QAAC,QAAQ,EAAEN;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eAE5B;QAAM,KAAK,EAAE;UAAEgB,OAAO,EAAE;QAAO,CAAE;QAAC,QAAQ,EAAEN,YAAa;QAAA,wBACvD;UACE,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,OAAO;UACZ,KAAK,EAAE;YAAEO,IAAI,EAAE,IAAI;YAAEC,OAAO,EAAE;UAAM,CAAE;UACtC,WAAW,EAAC,kEAAgB;UAC5B,KAAK,EAAEb,KAAM;UACb,QAAQ,EAAEE;QAAa;UAAA;UAAA;UAAA;QAAA,QACvB,eAEF;UACE,IAAI,EAAC,QAAQ;UACb,KAAK,EAAC,cAAI;UACV,SAAS,EAAC,KAAK;UACf,KAAK,EAAE;YAAEU,IAAI,EAAE;UAAI;QAAE;UAAA;UAAA;UAAA;QAAA,QACrB;MAAA;QAAA;QAAA;QAAA;MAAA,QACG;IAAA;MAAA;MAAA;MAAA;IAAA;EAEH;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA7EuBlB,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}