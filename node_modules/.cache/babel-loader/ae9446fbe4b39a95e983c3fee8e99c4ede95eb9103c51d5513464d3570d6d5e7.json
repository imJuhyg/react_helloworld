{"ast":null,"code":"var _jsxFileName = \"/Users/lim/Desktop/Project/react-todo-app/src/App.js\",\n  _s = $RefreshSig$();\n// import React, {Component} from \"react\"; // \"react\"라이브러리에서 React와 Component 클래스를 가져온다.\nimport React, { useState } from 'react';\nimport \"./App.css\";\nimport Form from './components/Form';\nimport List from './components/List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // state = {\n  //   todoData : [],\n  //   value : \"\"\n  // };\n  const [todoData, setTodoData] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault(); // 원래 submit은 페이지가 리로드된다. 이 것을 막아준다.\n\n    // 새로운 할 일 데이터\n    let newTodo = {\n      id: Date.now(),\n      title: value,\n      completed: false\n    };\n\n    // todoData에 새로운 할 일 추가하기\n    setTodoData(prev => [...prev, newTodo]); // setter에서 이전 state를 가져오기 위해서는 인수에 함수를 이용해서 가져올 수 있다.\n    setValue(\"\");\n  };\n\n  // functional component는 render()가 필요없음\n  // 함수를 정의할 때 const를 붙여주고 사용하는 부분에서 this. 을 더이상 붙일 필요 없음\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoBlock\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD560 \\uC77C \\uBAA9\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold underline\",\n        children: \"Hello World!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        todoData: todoData,\n        setTodoData: setTodoData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        handleSubmit: handleSubmit,\n        value: value,\n        setValue: setValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"S/Q++R/j89nkx2lbP/4ikFAxyyg=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Form","List","App","todoData","setTodoData","value","setValue","handleSubmit","e","preventDefault","newTodo","id","Date","now","title","completed","prev"],"sources":["/Users/lim/Desktop/Project/react-todo-app/src/App.js"],"sourcesContent":["// import React, {Component} from \"react\"; // \"react\"라이브러리에서 React와 Component 클래스를 가져온다.\nimport React, { useState } from 'react';\nimport \"./App.css\";\nimport Form from './components/Form';\nimport List from './components/List';\n\nexport default function App() {\n  // state = {\n  //   todoData : [],\n  //   value : \"\"\n  // };\n  const [todoData, setTodoData] = useState([]);\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); // 원래 submit은 페이지가 리로드된다. 이 것을 막아준다.\n\n    // 새로운 할 일 데이터\n    let newTodo = {\n      id: Date.now(),\n      title: value,\n      completed: false\n    };\n\n    // todoData에 새로운 할 일 추가하기\n    setTodoData((prev) => [...prev, newTodo]); // setter에서 이전 state를 가져오기 위해서는 인수에 함수를 이용해서 가져올 수 있다.\n    setValue(\"\");\n  };\n\n  // functional component는 render()가 필요없음\n  // 함수를 정의할 때 const를 붙여주고 사용하는 부분에서 this. 을 더이상 붙일 필요 없음\n  return (\n    <div className=\"container\">\n      <div className=\"todoBlock\">\n        <div class=\"title\">\n          <h1>할 일 목록</h1>\n        </div>\n        <h1 className=\"text-3xl font-bold underline\">Hello World!</h1>\n        <List todoData={todoData} setTodoData={setTodoData} />\n        <Form handleSubmit={handleSubmit} value={value} setValue={setValue} />\n      </div>\n    </div>\n  );\n}"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AAAC;AAErC,eAAe,SAASC,GAAG,GAAG;EAAA;EAC5B;EACA;EACA;EACA;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE,CAAC,CAAC;;IAEpB;IACA,IAAIC,OAAO,GAAG;MACZC,EAAE,EAAEC,IAAI,CAACC,GAAG,EAAE;MACdC,KAAK,EAAET,KAAK;MACZU,SAAS,EAAE;IACb,CAAC;;IAED;IACAX,WAAW,CAAEY,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEN,OAAO,CAAC,CAAC,CAAC,CAAC;IAC3CJ,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;;EAED;EACA;EACA,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,uBACxB;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAK,KAAK,EAAC,OAAO;QAAA,uBAChB;UAAA,UAAI;QAAM;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QACX,eACN;QAAI,SAAS,EAAC,8BAA8B;QAAA,UAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAK,eAC9D,QAAC,IAAI;QAAC,QAAQ,EAAEH,QAAS;QAAC,WAAW,EAAEC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAG,eACtD,QAAC,IAAI;QAAC,YAAY,EAAEG,YAAa;QAAC,KAAK,EAAEF,KAAM;QAAC,QAAQ,EAAEC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAClE;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GArCuBJ,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}