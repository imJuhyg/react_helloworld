{"ast":null,"code":"var _jsxFileName = \"/Users/lim/Desktop/Project/react_helloworld/src/components/List.js\";\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function List(_ref) {\n  let {\n    todoData,\n    setTodoData\n  } = _ref;\n  const handleClick = id => {\n    // 삭제버튼 누른 요소를 제외한 나머지 제외\n    let newTodoData = todoData.filter(data => data.id !== id);\n\n    // this.setState({todoData : newTodoData}); // 데이터 변경\n    setTodoData(newTodoData);\n  };\n  const handleCompleteChange = id => {\n    let newTodoData = todoData.map(data => {\n      if (data.id === id) {\n        data.completed = !data.completed;\n      }\n      return data;\n    });\n    // this.setState({ todoData : newTodoData });\n    setTodoData(newTodoData);\n  };\n  const handleStart = result => {\n    console.log('start result: ', result);\n  };\n  const handleEnd = result => {\n    // 매개변수 result에는 source항목 및 destination과 같은 드래그 이벤트에 대한 정보가 포함된다.\n    console.log('end result: ', result);\n\n    // destination이 없으면 함수를 종료한다.\n    if (!result.destination) return;\n\n    // Array.splice(): 배열의 기존 요소를 삭제 또는 교체하거나 새 요소를 추가하여 배열의 내용을 변경하는 메소드\n    // splice(index, 0, value) : index에 value추가\n    // splice(index, count): index에 count수 만큼 삭제.\n    const newTodoData = todoData;\n\n    // 1. 변경시키는 아이템을 배열에서 지워준다.\n    // 2. return 값으로 지워진 아이템을 잡아준다.\n    const [reorderedItem] = newTodoData.splice(result.source.index, 1);\n    console.log(`지우기: ${reorderedItem}`);\n\n    // 원하는 자리에 reorderedItem을 넣는다.\n    newTodoData.splice(result.destination.index, 0, reorderedItem);\n    setTodoData(newTodoData); // 상태 업데이트\n\n    const array = [1, 2, 3, 4];\n    const _array = [...array, 5];\n    console.log(array === _array);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragStart: handleStart,\n      onDragEnd: handleEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"todo\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [todoData.map((data, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: data.id.toString(),\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ...provided.draggableProps,\n              ref: provided.innerRef,\n              ...provided.dragHandleProps,\n              className: `${snapshot.isDragging ? \"bg-blue-400\" : \"bg-gray-100\"} flex item-center justify-between w-full px-4 py-1 my-2 text-gray-600 bg-gray-100 border rounded`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"items-center py-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  defaultChecked: false,\n                  onChange: () => handleCompleteChange(data.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 49\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: data.completed ? \"line-through\" : undefined,\n                  children: data.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"items-center py-2\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"\",\n                  onClick: () => handleClick(data.id),\n                  children: \"x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 45\n              }, this)]\n            }, data.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 41\n            }, this)\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_c = List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","DragDropContext","Droppable","Draggable","List","todoData","setTodoData","handleClick","id","newTodoData","filter","data","handleCompleteChange","map","completed","handleStart","result","console","log","handleEnd","destination","reorderedItem","splice","source","index","array","_array","provided","droppableProps","innerRef","toString","snapshot","draggableProps","dragHandleProps","isDragging","undefined","title","placeholder"],"sources":["/Users/lim/Desktop/Project/react_helloworld/src/components/List.js"],"sourcesContent":["import React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nexport default function List({ todoData, setTodoData }) {\n    const handleClick = (id) => {\n        // 삭제버튼 누른 요소를 제외한 나머지 제외\n        let newTodoData = todoData.filter(data => data.id !== id)\n\n        // this.setState({todoData : newTodoData}); // 데이터 변경\n        setTodoData(newTodoData);\n    };\n\n    const handleCompleteChange = (id) => {\n        let newTodoData = todoData.map((data) => {\n            if (data.id === id) {\n                data.completed = !data.completed;\n            }\n            return data;\n        })\n        // this.setState({ todoData : newTodoData });\n        setTodoData(newTodoData);\n    }\n\n    const handleStart = (result) => {\n        console.log('start result: ', result);\n    }\n\n    const handleEnd = (result) => {\n        // 매개변수 result에는 source항목 및 destination과 같은 드래그 이벤트에 대한 정보가 포함된다.\n        console.log('end result: ', result);\n\n        // destination이 없으면 함수를 종료한다.\n        if(!result.destination) return;\n\n        // Array.splice(): 배열의 기존 요소를 삭제 또는 교체하거나 새 요소를 추가하여 배열의 내용을 변경하는 메소드\n        // splice(index, 0, value) : index에 value추가\n        // splice(index, count): index에 count수 만큼 삭제.\n        const newTodoData = todoData;\n\n        // 1. 변경시키는 아이템을 배열에서 지워준다.\n        // 2. return 값으로 지워진 아이템을 잡아준다.\n        const [reorderedItem] = newTodoData.splice(result.source.index, 1);\n        console.log(`지우기: ${reorderedItem}`);\n\n        // 원하는 자리에 reorderedItem을 넣는다.\n        newTodoData.splice(result.destination.index, 0, reorderedItem);\n        setTodoData(newTodoData); // 상태 업데이트\n        \n        const array = [1, 2, 3, 4];\n        const _array = [...array, 5];\n        console.log(array === _array);\n\n    }\n\n    return (\n        <div>\n            <DragDropContext onDragStart={ handleStart} onDragEnd={ handleEnd }>\n                <Droppable droppableId=\"todo\">\n                    {(provided) => (\n                        <div {...provided.droppableProps} ref={provided.innerRef}>\n                            {todoData.map((data, index) => (\n                                <Draggable\n                                    key={data.id}\n                                    draggableId={data.id.toString()}\n                                    index={index}\n                                >\n                                    {(provided, snapshot) => (\n                                        <div\n                                            key={data.id}\n                                            {...provided.draggableProps}\n                                            ref={provided.innerRef}\n                                            {...provided.dragHandleProps}\n                                            className={`${snapshot.isDragging ? \"bg-blue-400\" : \"bg-gray-100\"} flex item-center justify-between w-full px-4 py-1 my-2 text-gray-600 bg-gray-100 border rounded`}>\n\n                                            <div className='items-center py-2'>\n                                                <input\n                                                    type=\"checkbox\"\n                                                    defaultChecked={false}\n                                                    onChange={() => handleCompleteChange(data.id)}\n                                                />{\" \"}\n                                                <span\n                                                    className={data.completed ? \"line-through\" : undefined}>\n                                                    {data.title}\n                                                </span>\n                                            </div>\n                                            <div className='items-center py-2'>\n                                                <button\n                                                    className=''\n                                                    onClick={() => handleClick(data.id)}>x\n                                                </button>\n                                            </div>\n\n                                        </div>\n                                    )}\n                                </Draggable>\n                            ))}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}