{"ast":null,"code":"var _jsxFileName = \"/Users/lim/Desktop/Project/react-todo-app/src/App.js\",\n  _s = $RefreshSig$();\n// import React, {Component} from \"react\"; // \"react\"라이브러리에서 React와 Component 클래스를 가져온다.\nimport React, { useState } from 'react';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // state = {\n  //   todoData : [],\n  //   value : \"\"\n  // };\n  const [todoData, setTodoData] = useState([]); // todoData state 정의\n  const [value, setValue] = useState(\"\"); // value state 정의\n\n  const btnStyle = {\n    // 스타일(정적으로 지정하여 사용 가능)\n    color: \"#fff\",\n    border: \"none\",\n    padding: \"5px 9px\",\n    borderRadius: \"50%\",\n    cursor: \"pointer\",\n    float: \"right\"\n  };\n  const getStyle = isCompleted => {\n    // 스타일 함수(동적으로 사용 가능)\n    return {\n      padding: \"10px\",\n      borderBottom: \"1px #ccc dotted\",\n      textDecoration: isCompleted ? 'line-through' : 'none'\n    };\n  };\n  const handleClick = id => {\n    // 삭제버튼 누른 요소를 제외한 나머지 제외\n    let newTodoData = todoData.filter(data => data.id !== id);\n\n    // this.setState({todoData : newTodoData}); // 데이터 변경\n    setTodoData(newTodoData);\n  };\n  const handleChange = e => {\n    // this.setState({ value : e.target.value });\n    setValue(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault(); // 원래 submit은 페이지가 리로드된다. 이 것을 막아준다.\n\n    // 새로운 할 일 데이터\n    let newTodo = {\n      id: Date.now(),\n      // title: this.state.value,\n      title: value,\n      completed: false\n    };\n\n    // todoData에 새로운 할 일 추가하기\n    // this.setState({ todoData: [...todoData, newTodo] });\n    setTodoData(prev => [...prev, newTodo]); // setter에서 이전 state를 가져오기 위해서는 인수에 함수를 이용해서 가져올 수 있다.\n    // input에 있던 value 삭제\n    // this.setState({ value : \"\"} );\n    setValue(\"\");\n  };\n  const handleCompleteChange = id => {\n    let newTodoData = todoData.map(data => {\n      if (data.id === id) {\n        data.completed = !data.completed;\n      }\n      return data;\n    });\n    // this.setState({ todoData : newTodoData });\n    setTodoData(newTodoData);\n  };\n\n  // functional component는 render()가 필요없음\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoBlock\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD560 \\uC77C \\uBAA9\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), todoData.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: this.getStyle(data.completed),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          defaultChecked: false,\n          onChange: () => this.handleCompleteChange(data.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), data.title, /*#__PURE__*/_jsxDEV(\"button\", {\n          style: this.btnStyle,\n          onClick: () => this.handleClick(data.id),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, data.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          display: 'flex'\n        },\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"value\",\n          style: {\n            flex: '10',\n            padding: '5px'\n          },\n          placeholder: \"\\uD574\\uC57C\\uD560 \\uC77C \\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n          value: value,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"\\uC785\\uB825\",\n          className: \"btn\",\n          style: {\n            flex: '1'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"S/Q++R/j89nkx2lbP/4ikFAxyyg=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","todoData","setTodoData","value","setValue","btnStyle","color","border","padding","borderRadius","cursor","float","getStyle","isCompleted","borderBottom","textDecoration","handleClick","id","newTodoData","filter","data","handleChange","e","target","handleSubmit","preventDefault","newTodo","Date","now","title","completed","prev","handleCompleteChange","map","display","flex"],"sources":["/Users/lim/Desktop/Project/react-todo-app/src/App.js"],"sourcesContent":["// import React, {Component} from \"react\"; // \"react\"라이브러리에서 React와 Component 클래스를 가져온다.\nimport React, { useState } from 'react';\nimport \"./App.css\";\n\nexport default function App() {\n  // state = {\n  //   todoData : [],\n  //   value : \"\"\n  // };\n  const [todoData, setTodoData] = useState([]); // todoData state 정의\n  const [value, setValue] = useState(\"\"); // value state 정의\n\n  const btnStyle = { // 스타일(정적으로 지정하여 사용 가능)\n    color: \"#fff\",\n    border: \"none\",\n    padding: \"5px 9px\",\n    borderRadius: \"50%\",\n    cursor: \"pointer\",\n    float: \"right\"\n  }\n  \n  const getStyle = (isCompleted) => { // 스타일 함수(동적으로 사용 가능)\n    return {\n      padding: \"10px\",\n      borderBottom: \"1px #ccc dotted\",\n      textDecoration: isCompleted ? 'line-through' : 'none'\n    }\n  }\n\n  const handleClick = (id) => {\n    // 삭제버튼 누른 요소를 제외한 나머지 제외\n    let newTodoData = todoData.filter(data => data.id !== id)\n\n    // this.setState({todoData : newTodoData}); // 데이터 변경\n    setTodoData(newTodoData);\n  };\n\n  const handleChange = (e) => {\n    // this.setState({ value : e.target.value });\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); // 원래 submit은 페이지가 리로드된다. 이 것을 막아준다.\n\n    // 새로운 할 일 데이터\n    let newTodo = {\n      id: Date.now(),\n      // title: this.state.value,\n      title: value,\n      completed: false\n    };\n\n    // todoData에 새로운 할 일 추가하기\n    // this.setState({ todoData: [...todoData, newTodo] });\n    setTodoData(prev => [...prev, newTodo]); // setter에서 이전 state를 가져오기 위해서는 인수에 함수를 이용해서 가져올 수 있다.\n    // input에 있던 value 삭제\n    // this.setState({ value : \"\"} );\n    setValue(\"\");\n  };\n\n  const handleCompleteChange = (id) => {\n    let newTodoData = todoData.map((data) => {\n      if(data.id === id) {\n        data.completed = !data.completed;\n      }\n      return data;\n    })\n    // this.setState({ todoData : newTodoData });\n    setTodoData(newTodoData);\n  }\n\n  // functional component는 render()가 필요없음\n  return (\n    <div className=\"container\">\n      <div className=\"todoBlock\">\n        <div class=\"title\">\n          <h1>할 일 목록</h1>\n        </div>\n\n        {todoData.map((data) => (\n          <div style={this.getStyle(data.completed)} key={data.id}>\n          <input type=\"checkbox\" defaultChecked={false} onChange={ () => this.handleCompleteChange(data.id) } />\n            {data.title}\n          <button style={this.btnStyle} onClick={() => this.handleClick(data.id)}>x</button>\n        </div>\n        ))}\n        \n        <form style={{display: 'flex'}} onSubmit={ this.handleSubmit }>\n          <input \n            type=\"text\" \n            name=\"value\" \n            style={{ flex : '10', padding : '5px' }} \n            placeholder=\"해야할 일 을 입력하세요.\"\n            value={ value }\n            onChange={this.handleChange}\n          />\n\n          <input\n            type=\"submit\"\n            value=\"입력\"\n            className=\"btn\"\n            style={{ flex : '1' }}\n          />\n        </form>\n\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}