{"ast":null,"code":"var _jsxFileName = \"/Users/lim/Desktop/Project/react-todo-app/src/App.js\";\nimport React, { Component } from \"react\"; // \"react\"라이브러리에서 React와 Component 클래스를 가져온다.\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      todoData: [// JSON 형식처럼\n      ],\n      value: \"\"\n    };\n    this.btnStyle = {\n      // 스타일(정적으로 지정하여 사용 가능)\n      color: \"#fff\",\n      border: \"none\",\n      padding: \"5px 9px\",\n      borderRadius: \"50%\",\n      cursor: \"pointer\",\n      float: \"right\"\n    };\n    this.getStyle = isCompleted => {\n      // 스타일 함수(동적으로 사용 가능)\n      return {\n        padding: \"10px\",\n        borderBottom: \"1px #ccc dotted\",\n        textDecoration: isCompleted ? 'line-through' : 'none'\n      };\n    };\n    this.handleClick = id => {\n      // 삭제버튼 누른 요소를 제외한 나머지 제외\n      let newTodoData = this.state.todoData.filter(data => data.id !== id);\n      this.setState({\n        todoData: newTodoData\n      }); // 데이터 변경\n    };\n    this.handleChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n    this.handleSubmit = e => {\n      e.preventDefault(); // 원래 submit은 페이지가 리로드된다. 이 것을 막아준다.\n\n      // 새로운 할 일 데이터\n      let newTodo = {\n        id: Date.now(),\n        title: this.state.value,\n        completed: false\n      };\n\n      // todoData에 새로운 할 일 추가하기\n      this.setState({\n        todoData: [...this.state.todoData, newTodo]\n      });\n      // input에 있던 value 삭제\n      this.setState({\n        value: \"\"\n      });\n    };\n  }\n  render() {\n    // render(): Component의 함수\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"title\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\uD560 \\uC77C \\uBAA9\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), this.state.todoData.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: this.getStyle(data.completed),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            defaultChecked: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), data.title, /*#__PURE__*/_jsxDEV(\"button\", {\n            style: this.btnStyle,\n            onClick: () => this.handleClick(data.id),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n          style: {\n            display: 'flex'\n          },\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"value\",\n            style: {\n              flex: '10',\n              padding: '5px'\n            },\n            placeholder: \"\\uD574\\uC57C\\uD560 \\uC77C \\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n            value: this.state.value,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"\\uC785\\uB825\",\n            className: \"btn\",\n            style: {\n              flex: '1'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","App","state","todoData","value","btnStyle","color","border","padding","borderRadius","cursor","float","getStyle","isCompleted","borderBottom","textDecoration","handleClick","id","newTodoData","filter","data","setState","handleChange","e","target","handleSubmit","preventDefault","newTodo","Date","now","title","completed","render","map","display","flex"],"sources":["/Users/lim/Desktop/Project/react-todo-app/src/App.js"],"sourcesContent":["import React, {Component} from \"react\"; // \"react\"라이브러리에서 React와 Component 클래스를 가져온다.\nimport \"./App.css\";\n\nexport default class App extends Component {\n\n  state = {\n    todoData : [ // JSON 형식처럼\n      \n    ],\n    value : \"\"\n  };\n\n  btnStyle = { // 스타일(정적으로 지정하여 사용 가능)\n    color: \"#fff\",\n    border: \"none\",\n    padding: \"5px 9px\",\n    borderRadius: \"50%\",\n    cursor: \"pointer\",\n    float: \"right\"\n  }\n  \n  getStyle = (isCompleted) => { // 스타일 함수(동적으로 사용 가능)\n    return {\n      padding: \"10px\",\n      borderBottom: \"1px #ccc dotted\",\n      textDecoration: isCompleted ? 'line-through' : 'none'\n    }\n  }\n\n  handleClick = (id) => {\n    // 삭제버튼 누른 요소를 제외한 나머지 제외\n    let newTodoData = this.state.todoData.filter(data => data.id !== id)\n\n    this.setState({todoData : newTodoData}); // 데이터 변경\n  };\n\n  handleChange = (e) => {\n    this.setState({ value : e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault(); // 원래 submit은 페이지가 리로드된다. 이 것을 막아준다.\n\n    // 새로운 할 일 데이터\n    let newTodo = {\n      id: Date.now(),\n      title: this.state.value,\n      completed: false\n    };\n\n    // todoData에 새로운 할 일 추가하기\n    this.setState({ todoData: [...this.state.todoData, newTodo] });\n    // input에 있던 value 삭제\n    this.setState({ value : \"\"} );\n  };\n\n  render() { // render(): Component의 함수\n    return(\n      <div className=\"container\">\n        <div className=\"todoBlock\">\n          <div class=\"title\">\n            <h1>할 일 목록</h1>\n          </div>\n\n          {this.state.todoData.map((data) => (\n            <div style={this.getStyle(data.completed)} key={data.id}>\n            <input type=\"checkbox\" defaultChecked={false} />\n              {data.title}\n            <button style={this.btnStyle} onClick={() => this.handleClick(data.id)}>x</button>\n          </div>\n          ))}\n          \n          <form style={{display: 'flex'}} onSubmit={ this.handleSubmit }>\n            <input \n              type=\"text\" \n              name=\"value\" \n              style={{ flex : '10', padding : '5px' }} \n              placeholder=\"해야할 일 을 입력하세요.\"\n              value={ this.state.value }\n              onChange={this.handleChange}\n            />\n\n            <input\n              type=\"submit\"\n              value=\"입력\"\n              className=\"btn\"\n              style={{ flex : '1' }}\n            />\n          </form>\n\n        </div>\n      </div>\n    );\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}