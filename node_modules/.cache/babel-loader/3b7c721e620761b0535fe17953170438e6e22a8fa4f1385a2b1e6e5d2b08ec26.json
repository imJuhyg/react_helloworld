{"ast":null,"code":"var _jsxFileName = \"/Users/lim/Desktop/Project/react_helloworld/src/App.js\",\n  _s = $RefreshSig$();\n// import React, {Component} from \"react\"; // \"react\"라이브러리에서 React와 Component 클래스를 가져온다.\nimport React, { useState, useCallback } from 'react';\nimport \"./App.css\";\nimport Form from './components/Form';\nimport Lists from './components/Lists';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  console.log(\"App.js\");\n  const [todoData, setTodoData] = useState([{\n    id: 1,\n    title: \"공부하기\",\n    completed: false\n  }, {\n    id: 2,\n    title: \"밥먹기 \",\n    completed: false\n  }]);\n  const [value, setValue] = useState(\"\");\n  const handleClick = useCallback(id => {\n    // 삭제버튼 누른 요소를 제외한 나머지 제외\n    let newTodoData = todoData.filter(data => data.id !== id);\n\n    // this.setState({todoData : newTodoData}); // 데이터 변경\n    setTodoData(newTodoData);\n    localStorage.setItem('todoData', JSON.stringify(newTodoData));\n  }, [todoData]);\n  const handleSubmit = e => {\n    e.preventDefault(); // 원래 submit은 페이지가 리로드된다. 이 것을 막아준다.\n\n    // 새로운 할 일 데이터\n    let newTodo = {\n      id: Date.now(),\n      title: value,\n      completed: false\n    };\n\n    // todoData에 새로운 할 일 추가하기\n    setTodoData(prev => [...prev, newTodo]); // setter에서 이전 state를 가져오기 위해서는 인수에 함수를 이용해서 가져올 수 있다.\n    setValue(\"\");\n  };\n  const handleRemoveClick = () => {\n    setTodoData([]);\n  };\n\n  // functional component는 render()가 필요없음\n  // 함수를 정의할 때 const를 붙여주고 사용하는 부분에서 this. 을 더이상 붙일 필요 없음\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center w-screen h-screen bg-blue-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full p-6 m-4 bg-white rounded shadow lg:w-3/4 lg:max-w-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD560 \\uC77C \\uBAA9\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRemoveClick,\n          children: \"Delete All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Lists, {\n        handleClick: handleClick,\n        todoData: todoData,\n        setTodoData: setTodoData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        handleSubmit: handleSubmit,\n        value: value,\n        setValue: setValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hDNSKmoAx+uH+rSqGz0xXfKfWJk=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","Form","Lists","App","console","log","todoData","setTodoData","id","title","completed","value","setValue","handleClick","newTodoData","filter","data","localStorage","setItem","JSON","stringify","handleSubmit","e","preventDefault","newTodo","Date","now","prev","handleRemoveClick"],"sources":["/Users/lim/Desktop/Project/react_helloworld/src/App.js"],"sourcesContent":["// import React, {Component} from \"react\"; // \"react\"라이브러리에서 React와 Component 클래스를 가져온다.\nimport React, { useState, useCallback } from 'react';\nimport \"./App.css\";\nimport Form from './components/Form';\nimport Lists from './components/Lists';\n\nexport default function App() {\n  console.log(\"App.js\")\n  const [todoData, setTodoData] = useState([\n    {\n      id: 1,\n      title: \"공부하기\",\n      completed: false\n    },\n    {\n      id: 2,\n      title: \"밥먹기 \",\n      completed: false\n    }\n  ]);\n  const [value, setValue] = useState(\"\");\n\n  const handleClick = useCallback((id) => {\n    // 삭제버튼 누른 요소를 제외한 나머지 제외\n    let newTodoData = todoData.filter(data => data.id !== id)\n\n    // this.setState({todoData : newTodoData}); // 데이터 변경\n    setTodoData(newTodoData);\n    localStorage.setItem('todoData', JSON.stringify(newTodoData));\n  }, [todoData]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); // 원래 submit은 페이지가 리로드된다. 이 것을 막아준다.\n\n    // 새로운 할 일 데이터\n    let newTodo = {\n      id: Date.now(),\n      title: value,\n      completed: false\n    };\n\n    // todoData에 새로운 할 일 추가하기\n    setTodoData((prev) => [...prev, newTodo]); // setter에서 이전 state를 가져오기 위해서는 인수에 함수를 이용해서 가져올 수 있다.\n    setValue(\"\");\n  };\n\n  const handleRemoveClick = () => {\n    setTodoData([]);\n  }\n\n  // functional component는 render()가 필요없음\n  // 함수를 정의할 때 const를 붙여주고 사용하는 부분에서 this. 을 더이상 붙일 필요 없음\n  return (\n    <div className='flex items-center justify-center w-screen h-screen bg-blue-100'>\n      <div className='w-full p-6 m-4 bg-white rounded shadow lg:w-3/4 lg:max-w-lg'>\n        <div className='flex justify-between mb-3'>\n          <h1>할 일 목록</h1>\n          <button onClick={handleRemoveClick}>Delete All</button>\n        </div>\n        <Lists handleClick={handleClick} todoData={todoData} setTodoData={setTodoData} />\n        <Form handleSubmit={handleSubmit} value={value} setValue={setValue} />\n      </div>\n    </div>\n  );\n}"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AAAC;AAEvC,eAAe,SAASC,GAAG,GAAG;EAAA;EAC5BC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CACvC;IACES,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE;EACb,CAAC,EACD;IACEF,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE;EACb,CAAC,CACF,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMc,WAAW,GAAGb,WAAW,CAAEQ,EAAE,IAAK;IACtC;IACA,IAAIM,WAAW,GAAGR,QAAQ,CAACS,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACR,EAAE,KAAKA,EAAE,CAAC;;IAEzD;IACAD,WAAW,CAACO,WAAW,CAAC;IACxBG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACN,WAAW,CAAC,CAAC;EAC/D,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,MAAMe,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE,CAAC,CAAC;;IAEpB;IACA,IAAIC,OAAO,GAAG;MACZhB,EAAE,EAAEiB,IAAI,CAACC,GAAG,EAAE;MACdjB,KAAK,EAAEE,KAAK;MACZD,SAAS,EAAE;IACb,CAAC;;IAED;IACAH,WAAW,CAAEoB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEH,OAAO,CAAC,CAAC,CAAC,CAAC;IAC3CZ,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMgB,iBAAiB,GAAG,MAAM;IAC9BrB,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;;EAED;EACA;EACA,oBACE;IAAK,SAAS,EAAC,gEAAgE;IAAA,uBAC7E;MAAK,SAAS,EAAC,6DAA6D;MAAA,wBAC1E;QAAK,SAAS,EAAC,2BAA2B;QAAA,wBACxC;UAAA,UAAI;QAAM;UAAA;UAAA;UAAA;QAAA,QAAK,eACf;UAAQ,OAAO,EAAEqB,iBAAkB;UAAA,UAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACnD,eACN,QAAC,KAAK;QAAC,WAAW,EAAEf,WAAY;QAAC,QAAQ,EAAEP,QAAS;QAAC,WAAW,EAAEC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAG,eACjF,QAAC,IAAI;QAAC,YAAY,EAAEc,YAAa;QAAC,KAAK,EAAEV,KAAM;QAAC,QAAQ,EAAEC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAClE;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA1DuBT,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}